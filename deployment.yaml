apiVersion: apps/v1
kind: Deployment
metadata:
  name: login-ci-demo-deployment
  labels:
    app: login-ci-demo
spec:
  replicas: 2
  selector:
    matchLabels:
      app: login-ci-demo
  template:
    metadata:
      labels:
        app: login-ci-demo
    spec:
      # Temporarily disable security context to debug
      # securityContext:
      #   runAsNonRoot: true
      containers:
      - name: login-ci-demo-container
        image: ruthik005/capstone_project:latest
        ports:
        - containerPort: 8081
        # Temporarily remove volume mounts to debug
        # volumeMounts:
        # - name: tmp-volume
        #   mountPath: /tmp
        env:
        - name: SERVER_PORT
          value: "8081"
        - name: MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE
          value: "health,info"
        - name: MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS
          value: "always"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        # Use actuator health endpoint with proper timeouts
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8081
          initialDelaySeconds: 120  # Give more time for Spring Boot to start
          periodSeconds: 30
          timeoutSeconds: 15
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8081
          initialDelaySeconds: 90
          periodSeconds: 10
          timeoutSeconds: 10
          failureThreshold: 5
        # Temporarily disable security context to debug
        # securityContext:
        #   runAsUser: 1001
        #   runAsGroup: 1001
        #   readOnlyRootFilesystem: true
        #   allowPrivilegeEscalation: false
      # Temporarily remove volumes to debug
      # volumes:
      # - name: tmp-volume
      #   emptyDir: {}

---

apiVersion: v1
kind: Service
metadata:
  name: login-ci-demo-service
  labels:
    app: login-ci-demo
spec:
  type: NodePort
  selector:
    app: login-ci-demo
  ports:
    - protocol: TCP
      port: 8081
      targetPort: 8081
      nodePort: 30081

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: login-ci-demo-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: login-demo.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: login-ci-demo-service
            port:
              number: 8081